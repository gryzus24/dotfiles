#!/bin/dash

DFIGNORE_PATH='.dfignore'
PY_GET_DFIGNORE="
import sys
with open('$DFIGNORE_PATH') as f:
    sys.stdout.write(
        '|'.join(
            x + '$' for x in map(str.strip, f)
            if x and not x.startswith('#')
        )
    )
"

fnames="$(git ls-files)" || exit 1
if [ -s "$DFIGNORE_PATH" ]; then
    ignore_pattern="$(python3 -Sc "$PY_GET_DFIGNORE")"
    if [ -n "$ignore_pattern" ]; then
        fnames="$(printf '%s' "$fnames" | grep -Ev "$ignore_pattern")"
    fi
fi

if [ -z "$fnames" ]; then
    echo "$(basename "$0"): no files to compare"
    exit 1
fi

exec 3<&0
printf '%s\n' "$fnames" | while read -r file; do
    home_file_path="$HOME/$file"

    # Continue if files do not differ.
    diff -q "$home_file_path" "$file" >/dev/null && continue

    if [ -e "$home_file_path" ] && file -b "$home_file_path" | grep -q ELF; then
        if [ "$(dirname "$home_file_path")" = "$HOME/bin" ]; then
            home_file_path="$HOME/bin/overridden/$(basename "$home_file_path")"
            diff -q "$home_file_path" "$file" >/dev/null && continue
        else
            printf '%s\n' "error: ELF file $home_file_path not in ~/bin"
            exit 1
        fi
    fi

    printf '%s\t%s\n' "$home_file_path" "$file"
    printf 'Open in vimdiff [Y/n]: ' >&2
    read -r ans <&3
    if [ -z "$ans" ] || [ "$ans" = 'y' ] || [ "$ans" = 'Y' ]; then
        <&3 vimdiff "$home_file_path" "$file"
    fi
done
exec 3<&-
