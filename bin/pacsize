#!/usr/bin/python3 -S
from __future__ import annotations

import subprocess
import sys


def main() -> int:
    with subprocess.Popen(
        ('/usr/bin/pacman', '-Q', '-i'),
        stdout=subprocess.PIPE,
        env={'LC_ALL': 'C'},
        encoding='UTF-8'
    ) as p:
        outs, _ = p.communicate()

    check = ('Name', 'Installed Size')
    lines = [
        x[18:]
        for x in outs.splitlines()
        if x.startswith(check)
    ]

    packages = []
    package_width = total_bytes = 0
    for i in range(0, len(lines), len(check)):
        name = lines[i]
        if len(name) > package_width:
            package_width = len(name)

        ssize, _, unit = lines[i + 1].partition(' ')
        if unit == 'B':
            nbytes = int(float(ssize))
        elif unit == 'KiB':
            nbytes = int(float(ssize) * 1024)
        elif unit == 'MiB':
            nbytes = int(float(ssize) * (1024 ** 2))
        elif unit == 'GiB':
            nbytes = int(float(ssize) * (1024 ** 3))
        else:
            raise AssertionError('TiB+ conversion not implemented')

        total_bytes += nbytes
        packages.append((name, lines[i + 1], nbytes))

    total_gib = total_bytes / (1024 ** 3)

    o = sys.stdout
    o.write(f'{"NUMBER OF PACKAGES":{package_width}} : {len(packages)}\n')
    o.write(f'{"TOTAL SIZE ON DISK":{package_width}} : {total_gib:.3f} GiB\n')
    o.write(18 * '=' + '\n')

    packages.sort(key=lambda x: x[2], reverse=True)
    for name, size, _ in packages:
        o.write(f'{name:{package_width}} : {size}\n')

    return 0


if __name__ == '__main__':
    raise SystemExit(main())
