#!/usr/bin/python3 -S
from __future__ import annotations

import os
import sys


def usage() -> int:
    prog = os.path.basename(sys.argv[0])
    sys.stdout.write(
        f'usage: {prog} [a] [c] [h] <newline delimited paths from stdin>\n'
        '  a  sort alphabetically\n'
        '  c  show file count per directory\n'
        '  h  display this help and exit\n'
    )
    return 2


def main() -> int:
    f_a = f_c = False
    for arg in sys.argv[1:]:
        for c in arg:
            if c == 'a':
                f_a = True
            elif c == 'c':
                f_c = True
            elif c == 'h':
                return usage()

    o = sys.stdout
    sep = os.path.sep
    isfile = os.path.isfile
    dirname = os.path.dirname

    dircnt: dict[str, int] = {}
    for line in map(str.strip, sys.stdin):
        line = line.rstrip(sep)
        if isfile(line):
            dname = dirname(line)
            if dname in dircnt:
                dircnt[dname] += 1
            else:
                dircnt[dname] = 1

    if not dircnt:
        return 0

    if f_a:
        r = sorted(dircnt.items())
    else:
        r = sorted(dircnt.items(), key=lambda x: x[1])

    if f_c:
        if f_a:
            width = len(str(max(dircnt.values())))
        else:
            width = len(str(r[-1][1]))

        for dname, cnt in r:
            o.write(f'{cnt:{width}} {dname}\n')
    else:
        for dname, _ in r:
            o.write(f'{dname}\n')

    return 0


if __name__ == '__main__':
    try:
        raise SystemExit(main())
    except KeyboardInterrupt:
        pass
