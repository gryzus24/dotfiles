#!/usr/bin/python3 -S
from __future__ import annotations

import os
import sys

# Color of "matching on selected line"
DEFAULT_MS = '\033[01;31m'  #]

# Color of "separators between selected line fields"
DEFAULT_SE = '\033[36m\033[K:\033[m\033[K'  #]]]]


def main() -> int:
    colors = os.environ.get('GREP_COLORS')
    if colors is None:
        ms_esc = DEFAULT_MS
        se_esc = DEFAULT_SE
    else:
        c = colors.split(':')
        mses = [
            f'\033[{x.partition("=")[2]}m\033[K'  #]]
            for x in c if x.startswith(('mt=', 'ms='))
        ]
        ses = [
            f'\033[{x.partition("=")[2]}m\033[K:\033[m\033[K'  #]]]]
            for x in c if x.startswith('se=')
        ]
        ms_esc = mses.pop() if mses else DEFAULT_MS
        se_esc = ses.pop() if ses else DEFAULT_SE

    parts = []
    before_ms_align = fileinfo_align = 0
    for line in sys.stdin:
        before_ms, ms_sep, match_and_rest = line.partition(ms_esc)
        fileinfo, se_sep, before_ms = before_ms.rpartition(se_esc)
        if se_sep:
            fileinfo += se_sep
            if len(fileinfo) > fileinfo_align:
                fileinfo_align = len(fileinfo)

        before_ms = before_ms.lstrip()
        if '\t' in before_ms:
            before_ms = before_ms.replace('\t', '    ')

        if len(before_ms) > before_ms_align:
            before_ms_align = len(before_ms)

        parts.append((fileinfo, before_ms, ms_sep, match_and_rest))

    o = sys.stdout
    for fileinfo, before_ms, ms_sep, match_and_rest in parts:
        o.write(
            f'{fileinfo:{fileinfo_align}}'
            f'{before_ms.rjust(before_ms_align)}'
            f'{ms_sep}'
            f'{match_and_rest}'
        )

    return 0


if __name__ == '__main__':
    raise SystemExit(main())
