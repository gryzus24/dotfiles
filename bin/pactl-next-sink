#!/usr/bin/python3 -S
from __future__ import annotations

import shutil
import subprocess
import sys

# Sinks that should not be set as default.
# Strings from the second column of `pactl list sinks short`.
IGNORED_SINKS: set[str] = {
    'alsa_output.pci-... ... ...',
}


def error(code: int, msg: str) -> int:
    sys.stderr.write(f'error: {msg}\n')
    return code


def main() -> int:
    pactl = shutil.which('pactl')
    if pactl is None:
        return error(1, 'no pactl in $PATH')

    cmd = (pactl, 'list', 'short', 'sinks')
    with subprocess.Popen(cmd, stdout=subprocess.PIPE, encoding='UTF-8') as p:
        outs, _ = p.communicate()

    all_sinks = [x.split('\t')[1] for x in outs.splitlines()]
    sinks = [x for x in all_sinks if x not in IGNORED_SINKS]
    if not sinks:
        return error(1, 'no sinks')
    if len(sinks) == 1:
        return 0

    with subprocess.Popen(
        (pactl, 'get-default-sink'),
        stdout=subprocess.PIPE,
        encoding='UTF-8'
    ) as p:
        outs, _ = p.communicate()

    default_sink = outs.strip()

    try:
        next_indx = (sinks.index(default_sink) + 1) % len(sinks)
    except ValueError:
        return error(1, f'@DEFAULT_SINK@ ({default_sink!r}) not in sinks')

    cmd = (pactl, 'set-default-sink', sinks[next_indx])
    with subprocess.Popen(cmd) as p:
        rc = p.wait()

    if rc:
        return error(rc, f'{" ".join(cmd)} failed with exit code {rc}')

    return 0


if __name__ == '__main__':
    raise SystemExit(main())
